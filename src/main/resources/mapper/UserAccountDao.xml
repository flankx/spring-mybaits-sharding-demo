<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.denachina.springmybaitsshardingdemo.dao.UserAccountDao">

    <!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.denachina.springmybaitsshardingdemo.po.UserAccountPo" id="BaseResultMap">
        <result property="userId" column="user_id"/>
        <result property="email" column="email"/>
        <result property="encryptEmail" column="encrypt_email"/>
        <result property="phoneNo" column="phone_no"/>
        <result property="encryptPhone" column="encrypt_phone"/>
        <result property="area" column="area"/>
        <result property="pwd" column="pwd"/>
        <result property="seed" column="seed"/>
        <result property="createdOn" column="created_on"/>
        <result property="updatedOn" column="updated_on"/>
    </resultMap>

    <!--
          选择性插入
        -->
    <sql id="Base_Insert_Selective">
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="encryptEmail != null">
                encrypt_email,
            </if>
            <if test="phoneNo != null">
                phone_no,
            </if>
            <if test="encryptPhone != null">
                encrypt_phone,
            </if>
            <if test="area != null">
                area,
            </if>
            <if test="pwd != null">
                pwd,
            </if>
            <if test="seed != null">
                seed,
            </if>
            <if test="createdOn != null">
                created_on,
            </if>
            <if test="updatedOn != null">
                updated_on
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="encryptEmail != null">
                #{encryptEmail,jdbcType=VARCHAR},
            </if>
            <if test="phoneNo != null">
                #{phoneNo,jdbcType=VARCHAR},
            </if>
            <if test="encryptPhone != null">
                #{encryptPhone,jdbcType=VARCHAR},
            </if>
            <if test="area != null">
                #{area,jdbcType=INTEGER},
            </if>
            <if test="pwd != null">
                #{pwd,jdbcType=VARCHAR},
            </if>
            <if test="seed != null">
                #{seed,jdbcType=VARCHAR},
            </if>
            <if test="createdOn != null">
                #{createdOn,jdbcType=INTEGER},
            </if>
            <if test="updatedOn != null">
                #{updatedOn,jdbcType=INTEGER}
            </if>
        </trim>
    </sql>

    <!--
      数据库表的基本查询列名集合
    -->
    <sql id="Base_Column_List">
        user_id, email, encrypt_email, phone_no, encrypt_phone, area, pwd, seed, created_on, updated_on
    </sql>

    <!--
        Where子句
      -->
    <sql id="Base_Query_Where">
        <if test="userId != null">
            and user_id = #{userId,jdbcType=INTEGER}
        </if>
        <if test="email != null">
            and email = #{email,jdbcType=VARCHAR}
        </if>
        <if test="encryptEmail != null">
            and encrypt_email = #{encryptEmail,jdbcType=VARCHAR}
        </if>
        <if test="phoneNo != null">
            and phone_no = #{phoneNo,jdbcType=VARCHAR}
        </if>
        <if test="encryptPhone != null">
            and encrypt_phone = #{encryptPhone,jdbcType=VARCHAR}
        </if>
        <if test="area != null">
            and area = #{area,jdbcType=INTEGER}
        </if>
        <if test="pwd != null">
            and pwd = #{pwd,jdbcType=VARCHAR}
        </if>
        <if test="seed != null">
            and seed = #{seed,jdbcType=VARCHAR}
        </if>
        <if test="createdOn != null">
            and created_on = #{createdOn,jdbcType=INTEGER}
        </if>
        <if test="updatedOn != null">
            and updated_on = #{updatedOn,jdbcType=INTEGER}
        </if>
    </sql>

    <!--
        基本更新字段
    -->
    <sql id="Base_Update_Column">
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="encryptEmail != null">
                encrypt_email = #{encryptEmail,jdbcType=VARCHAR},
            </if>
            <if test="phoneNo != null">
                phone_no = #{phoneNo,jdbcType=VARCHAR},
            </if>
            <if test="encryptPhone != null">
                encrypt_phone = #{encryptPhone,jdbcType=VARCHAR},
            </if>
            <if test="area != null">
                area = #{area,jdbcType=INTEGER},
            </if>
            <if test="pwd != null">
                pwd = #{pwd,jdbcType=VARCHAR},
            </if>
            <if test="seed != null">
                seed = #{seed,jdbcType=VARCHAR},
            </if>
            <if test="createdOn != null">
                created_on = #{createdOn,jdbcType=INTEGER},
            </if>
            <if test="updatedOn != null">
                updated_on = #{updatedOn,jdbcType=INTEGER}
            </if>
        </set>
    </sql>

    <!--
      根据主键查询数据库表
    -->
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user_account
        where user_id = #{userId,jdbcType=INTEGER}
    </select>


    <!--
      根据主键删除数据库表中的记录
    -->
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete FROM user_account
        where user_id = #{userId,jdbcType=INTEGER}
    </delete>

    <!--
      添加一条记录到数据库表中
    -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="id"
            parameterType="com.denachina.springmybaitsshardingdemo.po.UserAccountPo">
        insert into user_account
        (<include refid="Base_Column_List"/>)
        values (
        <if test="userId != null">
            #{userId,jdbcType=INTEGER},
        </if>
        <if test="email != null">
            #{email,jdbcType=VARCHAR},
        </if>
        <if test="encryptEmail != null">
            #{encryptEmail,jdbcType=VARCHAR},
        </if>
        <if test="phoneNo != null">
            #{phoneNo,jdbcType=VARCHAR},
        </if>
        <if test="encryptPhone != null">
            #{encryptPhone,jdbcType=VARCHAR},
        </if>
        <if test="area != null">
            #{area,jdbcType=INTEGER},
        </if>
        <if test="pwd != null">
            #{pwd,jdbcType=VARCHAR},
        </if>
        <if test="seed != null">
            #{seed,jdbcType=VARCHAR},
        </if>
        <if test="createdOn != null">
            #{createdOn,jdbcType=INTEGER},
        </if>
        <if test="updatedOn != null">
            #{updatedOn,jdbcType=INTEGER}
        </if>
        )
    </insert>

    <!--
     有选择的添加一条记录到数据库表中
   -->
    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id"
            parameterType="com.denachina.springmybaitsshardingdemo.po.UserAccountPo">
        insert into user_account
        <include refid="Base_Insert_Selective"/>
    </insert>

    <!--
      有选择的可忽略添加一条记录到数据库表中
    -->
    <insert id="insertSelectiveIgnore" useGeneratedKeys="true" keyProperty="id"
            parameterType="com.denachina.springmybaitsshardingdemo.po.UserAccountPo">
        insert ignore into user_account
        <include refid="Base_Insert_Selective"/>
    </insert>

    <!--
      根据主键有选择的更新数据库表
    -->
    <update id="updateByPrimaryKeySelective" parameterType="com.denachina.springmybaitsshardingdemo.po.UserAccountPo">
        update user_account
        <include refid="Base_Update_Column"></include>
        where user_id = #{userId,jdbcType=INTEGER}
    </update>


    <!--
      根据主键更新数据库表
    -->
    <update id="updateByPrimaryKey" parameterType="com.denachina.springmybaitsshardingdemo.po.UserAccountPo">
        update user_account
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="encryptEmail != null">
                encrypt_email = #{encryptEmail,jdbcType=VARCHAR},
            </if>
            <if test="phoneNo != null">
                phone_no = #{phoneNo,jdbcType=VARCHAR},
            </if>
            <if test="encryptPhone != null">
                encrypt_phone = #{encryptPhone,jdbcType=VARCHAR},
            </if>
            <if test="area != null">
                area = #{area,jdbcType=INTEGER},
            </if>
            <if test="pwd != null">
                pwd = #{pwd,jdbcType=VARCHAR},
            </if>
            <if test="seed != null">
                seed = #{seed,jdbcType=VARCHAR},
            </if>
            <if test="createdOn != null">
                created_on = #{createdOn,jdbcType=INTEGER},
            </if>
            <if test="updatedOn != null">
                updated_on = #{updatedOn,jdbcType=INTEGER}
            </if>
        </set>
        where user_id = #{userId,jdbcType=INTEGER}
    </update>

    <!--
      批量添加记录到数据库表中
    -->
    <insert id="batchInsert" parameterType="java.util.List">
        insert into user_account
        <trim prefix="(" suffix=")" suffixOverrides=",">
            user_id, email, encrypt_email, phone_no, encrypt_phone, area, pwd, seed, created_on, updated_on
        </trim>
        values
        <foreach collection="list" index="index" item="item" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides=",">
                #{item.userId,jdbcType=INTEGER}, #{item.email,jdbcType=VARCHAR}, #{item.encryptEmail,jdbcType=VARCHAR},
                #{item.phoneNo,jdbcType=VARCHAR}, #{item.encryptPhone,jdbcType=VARCHAR}, #{item.area,jdbcType=INTEGER},
                #{item.pwd,jdbcType=VARCHAR}, #{item.seed,jdbcType=VARCHAR}, #{item.createdOn,jdbcType=INTEGER},
                #{item.updatedOn,jdbcType=INTEGER}
            </trim>
        </foreach>
    </insert>

    <!--
      根据主键批量更新数据库表中的记录
    -->
    <update id="batchUpdate" parameterType="java.util.List">
        <foreach collection="list" index="index" item="item" separator=";">
            update user_account
            <set>
                <trim suffixOverrides=",">
                    <if test="item.userId != null">
                        user_id = #{item.userId,jdbcType=INTEGER},
                    </if>
                    <if test="item.email != null">
                        email = #{item.email,jdbcType=VARCHAR},
                    </if>
                    <if test="item.encryptEmail != null">
                        encrypt_email = #{item.encryptEmail,jdbcType=VARCHAR},
                    </if>
                    <if test="item.phoneNo != null">
                        phone_no = #{item.phoneNo,jdbcType=VARCHAR},
                    </if>
                    <if test="item.encryptPhone != null">
                        encrypt_phone = #{item.encryptPhone,jdbcType=VARCHAR},
                    </if>
                    <if test="item.area != null">
                        area = #{item.area,jdbcType=INTEGER},
                    </if>
                    <if test="item.pwd != null">
                        pwd = #{item.pwd,jdbcType=VARCHAR},
                    </if>
                    <if test="item.seed != null">
                        seed = #{item.seed,jdbcType=VARCHAR},
                    </if>
                    <if test="item.createdOn != null">
                        created_on = #{item.createdOn,jdbcType=INTEGER},
                    </if>
                    <if test="item.updatedOn != null">
                        updated_on = #{item.updatedOn,jdbcType=INTEGER}
                    </if>
                </trim>
            </set>
            <where>
                <trim suffixOverrides=",">
                    where user_id = #{userId,jdbcType=INTEGER}
                </trim>
            </where>
        </foreach>
    </update>

    <!--
     使用给定的字段名定义Where子句
   -->
    <sql id="Identifiers_Array_Conditions">
        <foreach collection="array" index="index" item="item" separator=" and ">
            <if test="item == 'userId'">
                user_id = #{userId,jdbcType=INTEGER}
            </if>
            <if test="item == 'email'">
                email = #{email,jdbcType=VARCHAR}
            </if>
            <if test="item == 'encryptEmail'">
                encrypt_email = #{encryptEmail,jdbcType=VARCHAR}
            </if>
            <if test="item == 'phoneNo'">
                phone_no = #{phoneNo,jdbcType=VARCHAR}
            </if>
            <if test="item == 'encryptPhone'">
                encrypt_phone = #{encryptPhone,jdbcType=VARCHAR}
            </if>
            <if test="item == 'area'">
                area = #{area,jdbcType=INTEGER}
            </if>
            <if test="item == 'pwd'">
                pwd = #{pwd,jdbcType=VARCHAR}
            </if>
            <if test="item == 'seed'">
                seed = #{seed,jdbcType=VARCHAR}
            </if>
            <if test="item == 'createdOn'">
                created_on = #{createdOn,jdbcType=INTEGER}
            </if>
            <if test="item == 'updatedOn'">
                updated_on = #{updatedOn,jdbcType=INTEGER}
            </if>
        </foreach>
    </sql>

    <!--
      存在即更新否则插入
    -->
    <update id="upsert" parameterType="com.denachina.springmybaitsshardingdemo.po.UserAccountPo">
        insert into user_account
        <trim prefix="(" suffix=")" suffixOverrides=",">
            user_id, email, encrypt_email, phone_no, encrypt_phone, area, pwd, seed, created_on, updated_on
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            #{userId,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, #{encryptEmail,jdbcType=VARCHAR},
            #{phoneNo,jdbcType=VARCHAR}, #{encryptPhone,jdbcType=VARCHAR}, #{area,jdbcType=INTEGER},
            #{pwd,jdbcType=VARCHAR}, #{seed,jdbcType=VARCHAR}, #{createdOn,jdbcType=INTEGER},
            #{updatedOn,jdbcType=INTEGER}
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            #{userId,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, #{encryptEmail,jdbcType=VARCHAR},
            #{phoneNo,jdbcType=VARCHAR}, #{encryptPhone,jdbcType=VARCHAR}, #{area,jdbcType=INTEGER},
            #{pwd,jdbcType=VARCHAR}, #{seed,jdbcType=VARCHAR}, #{createdOn,jdbcType=INTEGER},
            #{updatedOn,jdbcType=INTEGER}
        </trim>
    </update>


    <!--
      带有空值检查的存在即更新否则插入
    -->
    <update id="upsertSelective" parameterType="com.denachina.springmybaitsshardingdemo.po.UserAccountPo">
        insert into user_account
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId !=null ">
                user_id,
            </if>
            <if test="email !=null ">
                email,
            </if>
            <if test="encryptEmail !=null ">
                encrypt_email,
            </if>
            <if test="phoneNo !=null ">
                phone_no,
            </if>
            <if test="encryptPhone !=null ">
                encrypt_phone,
            </if>
            <if test="area !=null ">
                area,
            </if>
            <if test="pwd !=null ">
                pwd,
            </if>
            <if test="seed !=null ">
                seed,
            </if>
            <if test="createdOn !=null ">
                created_on,
            </if>
            <if test="updatedOn !=null ">
                updated_on
            </if>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId !=null ">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="email !=null ">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="encryptEmail !=null ">
                encrypt_email = #{encryptEmail,jdbcType=VARCHAR},
            </if>
            <if test="phoneNo !=null ">
                phone_no = #{phoneNo,jdbcType=VARCHAR},
            </if>
            <if test="encryptPhone !=null ">
                encrypt_phone = #{encryptPhone,jdbcType=VARCHAR},
            </if>
            <if test="area !=null ">
                area = #{area,jdbcType=INTEGER},
            </if>
            <if test="pwd !=null ">
                pwd = #{pwd,jdbcType=VARCHAR},
            </if>
            <if test="seed !=null ">
                seed = #{seed,jdbcType=VARCHAR},
            </if>
            <if test="createdOn !=null ">
                created_on = #{createdOn,jdbcType=INTEGER},
            </if>
            <if test="updatedOn !=null ">
                updated_on = #{updatedOn,jdbcType=INTEGER}
            </if>
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            <if test="userId !=null ">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="email !=null ">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="encryptEmail !=null ">
                encrypt_email = #{encryptEmail,jdbcType=VARCHAR},
            </if>
            <if test="phoneNo !=null ">
                phone_no = #{phoneNo,jdbcType=VARCHAR},
            </if>
            <if test="encryptPhone !=null ">
                encrypt_phone = #{encryptPhone,jdbcType=VARCHAR},
            </if>
            <if test="area !=null ">
                area = #{area,jdbcType=INTEGER},
            </if>
            <if test="pwd !=null ">
                pwd = #{pwd,jdbcType=VARCHAR},
            </if>
            <if test="seed !=null ">
                seed = #{seed,jdbcType=VARCHAR},
            </if>
            <if test="createdOn !=null ">
                created_on = #{createdOn,jdbcType=INTEGER},
            </if>
            <if test="updatedOn !=null ">
                updated_on = #{updatedOn,jdbcType=INTEGER}
            </if>
        </trim>
    </update>

    <select id="query" resultMap="BaseResultMap"
            parameterType="com.denachina.springmybaitsshardingdemo.po.UserAccountPo">
        select
        <include refid="Base_Column_List"/>
        from user_account
        <where>
            <include refid="Base_Query_Where"></include>
        </where>
    </select>

    <select id="queryTotal" resultType="long">
        select count(*) from user_account
    </select>


    <delete id="deleteBatch">
        delete from user_account where user_id in
        <foreach item="userId" collection="list" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </delete>

</mapper>